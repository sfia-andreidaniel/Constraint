/* $hint: compile-stats */

// IMPORTANT! Please do not remove or alter the $hint comments.
//            By doing so, constraint compiler will fail to 
//            patch your files, and you will loose data.

// @date:      {{compileDate}}
// @hostname:  {{userName}}
// @nodejs:    {{version}}
// @generator: Constraint compiler ( https://github.com/sfia-andreidaniel/Constraint )

/* $hint: end */

class {{name}} extends UI_Form {
	
    /* $hint: class-properties */
    // WARNING: Any code written inside of this hint is overrided by constraint compiler!

    // make all instances of {{name}} to await for resources, etc. before opening.
    public static __awaits__ = {{{awaits}}};

{{#if properties}}{{#each properties}}{{#unless anonymous}}
    public {{name}}: {{type}};{{#end}}{{#end}}{{#else}}{{#end}}
    /* $hint: end */

    constructor( provider: Container = null, initFlags: string[] = null ) {
        super();

        /* $hint: constructor-properties */
        // WARNING: Any code written inside of this hint is overrided by constraint compiler!
{{#if properties}}{{#each properties}}{{#unless anonymous}}
        this.{{name}} = new {{type}}( {{#if in}}this.{{in}}{{#else}}this{{#end}} );{{#end}}{{#end}}{{#end}}
        /* $hint: end */

        this.paintable = false;
        this.onInitialize();
    }

    // Initializes the form UI element properties
    protected onInitialize() {
        /* $hint: form-events */
{{#each localMethods}}
        this.on( '{{eventName}}', function() { this.{{methodName}}( this ); } );
{{#end}}
        /* $hint: end */

        /* $hint: child-properties */
        // WARNING: Any code written inside of this hint is overrided by constraint compiler!
{{#each childProperties}}
        this.{{name}} = {{#if literal}}{{{value}}};{{#else}}{{{valueJSON}}};{{#end}}{{#end}}
         /* $hint: end */

        /* $hint: initialization-properties */
        // WARNING: Any code written inside of this hint is overrided by constraint compiler!
{{#if properties}}{{#each properties}}{{#unless anonymous}}{{#each properties}}
        this.{{../name}}.{{name}} = {{#if literal}}{{{value}}};{{#else}}{{{valueJSON}}};{{#end}}{{#end}}
        {{#end}}{{#unless anonymous}}{{#if methods}}{{#each methods}}
        ( function( form ) { form.{{../name}}.on('{{eventName}}', function() { form.{{methodName}}( this ); } ); } )( this );
        {{#end}}{{#end}}{{#end}}{{#end}}{{#end}}
        /* $hint: end */

        /* $hint: anonymous-properties */
        // WARNING: Any code written inside of this hint is overrided by constraint compiler!
{{#if anonymousCode}}        ( function( form ) {
{{#each anonymousCode}}
{{{this}}}
{{#end}}
        })( this );{{#end}}
        /* $hint: end */
    
    }

{{#each methods}}
    /* $hint: method-{{this}} */
    public {{this}}( sender: UI_Event ) {

    }
    /* $hint: end */
{{#end}}

}